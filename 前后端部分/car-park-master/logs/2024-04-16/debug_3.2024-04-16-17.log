[18:08:03:363] [DEBUG] - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.lookupHandlerMethod(PropertySourcedRequestMappingHandlerMapping.java:108) - looking up handler for path: /parkinglots/getByName/中科大南区停车场
[18:08:03:340] [DEBUG] - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.lookupHandlerMethod(PropertySourcedRequestMappingHandlerMapping.java:108) - looking up handler for path: /auth/check
[18:08:03:342] [DEBUG] - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.lookupHandlerMethod(PropertySourcedRequestMappingHandlerMapping.java:108) - looking up handler for path: /auth/check
[18:08:03:343] [DEBUG] - io.lettuce.core.RedisChannelHandler.dispatch(RedisChannelHandler.java:179) - dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[18:08:03:345] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.channelWriteAndFlush(DefaultEndpoint.java:389) - [channel=0x3147e5cd, /192.168.232.1:51590 -> /192.168.232.130:6379, epid=0x2] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[18:08:03:345] [DEBUG] - io.lettuce.core.protocol.DefaultEndpoint.write(DefaultEndpoint.java:173) - [channel=0x3147e5cd, /192.168.232.1:51590 -> /192.168.232.130:6379, epid=0x2] write() done
[18:08:03:345] [DEBUG] - io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:374) - [channel=0x3147e5cd, /192.168.232.1:51590 -> /192.168.232.130:6379, chid=0x12] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[18:08:03:346] [DEBUG] - io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:101) - [channel=0x3147e5cd, /192.168.232.1:51590 -> /192.168.232.130:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[18:08:03:347] [DEBUG] - io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:570) - [channel=0x3147e5cd, /192.168.232.1:51590 -> /192.168.232.130:6379, chid=0x12] Received: 372 bytes, 1 commands in the stack
[18:08:03:348] [DEBUG] - io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:616) - [channel=0x3147e5cd, /192.168.232.1:51590 -> /192.168.232.130:6379, chid=0x12] Stack contains: 1 commands
[18:08:03:348] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:131) - Decode LatencyMeteredCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand]
[18:08:03:348] [DEBUG] - io.lettuce.core.protocol.RedisStateMachine.decode(RedisStateMachine.java:145) - Decoded LatencyMeteredCommand [type=GET, output=ValueOutput [output=[B@75b6a496, error='null'], commandType=io.lettuce.core.protocol.AsyncCommand], empty stack: true
[18:08:03:367] [WARN] - com.alibaba.druid.pool.DruidAbstractDataSource.testConnectionInternal(DruidAbstractDataSource.java:1494) - discard long time none received connection. , jdbcUrl : jdbc:mysql://192.168.232.130:3306/cpm_parkinglot?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true, version : 1.2.8, lastPacketReceivedIdleMillis : 593983
[18:08:03:367] [DEBUG] - com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1485) - skip not validate connection.
[18:08:03:379] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:137) - ==>  Preparing: SELECT id,total,car_amount,left_amount,name,administrator,phone,address FROM parkinglot WHERE (name = ?)
[18:08:03:379] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:137) - ==> Parameters: 中科大南区停车场(String)
[18:08:03:384] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:137) - <==      Total: 1
[18:08:03:386] [DEBUG] - com.netflix.loadbalancer.ZoneAwareLoadBalancer.chooseServer(ZoneAwareLoadBalancer.java:112) - Zone aware logic disabled or there is only one zone
[18:08:03:387] [DEBUG] - com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:492) - cpm-parkinglots using LB returned Server: 192.168.108.1:11000 for request http:///parkinglots/add
[18:08:03:388] [DEBUG] - springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping.lookupHandlerMethod(PropertySourcedRequestMappingHandlerMapping.java:108) - looking up handler for path: /parkinglots/add
[18:08:03:390] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:137) - ==>  Preparing: UPDATE parkinglot SET total=?, car_amount=?, left_amount=?, name=?, administrator=?, phone=?, address=? WHERE id=?
[18:08:03:390] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:137) - ==> Parameters: 100(Integer), 10(Integer), 90(Integer), 中科大南区停车场(String), 王五(String), 19999999999(String), 中科大南校区(String), 3(Integer)
[18:08:03:394] [DEBUG] - org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:137) - <==    Updates: 1
[18:08:03:396] [DEBUG] - com.netflix.loadbalancer.ZoneAwareLoadBalancer.chooseServer(ZoneAwareLoadBalancer.java:112) - Zone aware logic disabled or there is only one zone
[18:08:03:396] [DEBUG] - com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:492) - cpm-member using LB returned Server: 192.168.108.1:8000 for request http:///member/getByCarplate?carplate=%E8%8B%8FA58818
